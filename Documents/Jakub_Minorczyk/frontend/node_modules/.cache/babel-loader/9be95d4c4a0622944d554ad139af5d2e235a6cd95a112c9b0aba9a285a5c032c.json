{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      msg: 'Symulator rozkazów procesora',\n      formData: {\n        AX: '0x0000',\n        BX: '0x0000',\n        CX: '0x0000',\n        DX: '0x0000',\n        Offset: '0x0000',\n        Command: 'MOV'\n      },\n      response: null,\n      submitted: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        AX: this.formData.AX,\n        BX: this.formData.BX,\n        CX: this.formData.CX,\n        DX: this.formData.DX,\n        Offset: this.formData.Offset,\n        Command: this.formData.Command\n      };\n      const res = await axios.post('http://localhost:5000/api/controllers', formData);\n      this.response = res.data;\n    },\n    sendCommand() {\n      console.log(this.formData);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","msg","formData","AX","BX","CX","DX","Offset","Command","response","submitted","methods","submitForm","res","post","sendCommand","console","log"],"sources":["/Users/jakubminorczyk/Documents/Jakub_Minorczyk/frontend/src/components/SimulatorForm.vue"],"sourcesContent":["<template>\n    <div class=\"SimulatorForm\">\n      <h1>{{ msg }}</h1>\n    \n      <form @submit.prevent=\"submitForm\"> \n        <label for=\"command\">Wpisz AX:</label>\n        <input type=\"text\" id=\"name\" name=\"command\" v-model=\"formData.AX\"><br>\n        <label for=\"command\">Wpisz BX:</label>\n        <input type=\"text\" id=\"name\" name=\"command\" v-model=\"formData.BX\"><br>\n        <label for=\"command\">Wpisz CX:</label>\n        <input type=\"text\" id=\"name\" name=\"command\" v-model=\"formData.CX\"><br>\n        <label for=\"command\">Wpisz DX:</label>\n        <input type=\"text\" id=\"name\" name=\"command\" v-model=\"formData.DX\"><br>\n        <label for=\"command\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"name\" name=\"command\" v-model=\"formData.Offset\"><br>\n        <label for=\"command\">wybierz rozkaz:</label>\n        <select id=\"command\" v-model=\"formData.Command\" > \n            <option value=\"MOV\">MOV</option>\n            <option value=\"XCHG\">XCHG</option>\n            <option value=\"PUSH\">PUSH</option>\n            <option value=\"POP\">POP</option>\n        </select><br>\n        \n        <input type=\"submit\" value=\"Wyślij\" @click=\"sendCommand\">   \n      </form>\n      <div v-if=\"response\">\n      <h3>Przetworzone dane:</h3>\n      <p>Wartość 1: {{ response.ProcessedValue1 }}</p>\n      <p>Wartość 2: {{ response.ProcessedValue2 }}</p>\n      <p>Wartość 3: {{ response.ProcessedValue3 }}</p>\n      <p>Wartość 4: {{ response.ProcessedValue4 }}</p>\n      <p>Metoda przetwarzania: {{ response.ProcessMethod }}</p>\n    </div>\n    </div>  \n        \n  </template>\n  \n  <script>\n    import axios from 'axios';  \n\n    export default {\n        data() {\n        return {\n            msg: 'Symulator rozkazów procesora',\n            formData: {\n                AX: '0x0000',\n                BX: '0x0000',\n                CX: '0x0000',\n                DX: '0x0000',\n                Offset: '0x0000',\n                Command: 'MOV'\n            },\n            response: null,\n            submitted: false\n        };\n        },\n        methods: {\n        async submitForm() {\n            const formData = {\n                AX: this.formData.AX,\n                BX: this.formData.BX,\n                CX: this.formData.CX,\n                DX: this.formData.DX,\n                Offset: this.formData.Offset,\n                Command: this.formData.Command\n            }\n            const res = await axios.post('http://localhost:5000/api/controllers', formData);\n            this.response = res.data;\n\n        },\n        sendCommand() {\n            console.log(this.formData);\n        }\n        },\n    }\n  </script>\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n  h3 {\n    margin: 40px 0 0;\n  }\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  a {\n    color: #42b983;\n  }\n  </style>\n  "],"mappings":"AAsCI,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACP,OAAO;MACHC,GAAG,EAAE,8BAA8B;MACnCC,QAAQ,EAAE;QACNC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;MACb,CAAC;MACDC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACf,CAAC;EACD,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,UAAUA,CAAA,EAAG;MACf,MAAMV,QAAO,GAAI;QACbC,EAAE,EAAE,IAAI,CAACD,QAAQ,CAACC,EAAE;QACpBC,EAAE,EAAE,IAAI,CAACF,QAAQ,CAACE,EAAE;QACpBC,EAAE,EAAE,IAAI,CAACH,QAAQ,CAACG,EAAE;QACpBC,EAAE,EAAE,IAAI,CAACJ,QAAQ,CAACI,EAAE;QACpBC,MAAM,EAAE,IAAI,CAACL,QAAQ,CAACK,MAAM;QAC5BC,OAAO,EAAE,IAAI,CAACN,QAAQ,CAACM;MAC3B;MACA,MAAMK,GAAE,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,uCAAuC,EAAEZ,QAAQ,CAAC;MAC/E,IAAI,CAACO,QAAO,GAAII,GAAG,CAACb,IAAI;IAE5B,CAAC;IACDe,WAAWA,CAAA,EAAG;MACVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,QAAQ,CAAC;IAC9B;EACA;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
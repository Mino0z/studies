{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      msg: \"Symulator rozkazów procesora\",\n      formData: {\n        AX: \"0x0000\",\n        BX: \"0x0000\",\n        CX: \"0x0000\",\n        DX: \"0x0000\",\n        Offset: \"0x0000\",\n        Command: \"MOV\"\n      },\n      response: null,\n      submitted: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        AX: this.formData.AX,\n        BX: this.formData.BX,\n        CX: this.formData.CX,\n        DX: this.formData.DX,\n        Offset: this.formData.Offset,\n        Command: this.formData.Command\n      };\n      const res = await axios.post(\"http://localhost:5041/api/cpu\", formData);\n      this.response = res.data;\n    },\n    sendCommand() {\n      console.log(this.formData);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","msg","formData","AX","BX","CX","DX","Offset","Command","response","submitted","methods","submitForm","res","post","sendCommand","console","log"],"sources":["/Users/jakubminorczyk/Documents/Jakub_Minorczyk/frontend/src/components/SimulatorForm.vue"],"sourcesContent":["<template>\n  <div class=\"SimulatorForm\">\n    <h1>{{ msg }}</h1>\n\n    <form @submit.prevent=\"submitForm\">\n      <label for=\"command\">Wybierz rozkaz:</label>\n      <select id=\"command\" v-model=\"formData.Command\">\n        <option value=\"MOV\">MOV</option>\n        <option value=\"XCHG\">XCHG</option>\n        <option value=\"MOV_MEM\">MOV_MEM</option>\n        <option value=\"XCHG_MEM\">XCHG_MEM</option>\n        <option value=\"PUSH\">PUSH</option>\n        <option value=\"POP\">POP</option>\n      </select><br>\n\n      <!-- Pola widoczne tylko po wybraniu konkretnego rozkazu -->\n      <div v-if=\"formData.Command === 'MOV' || formData.Command === 'XCHG'\">\n        <label for=\"ax\">Wpisz AX:</label>\n        <input type=\"text\" id=\"ax\" name=\"command\" v-model=\"formData.AX\"><br>\n\n        <label for=\"bx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"bx\" name=\"command\" v-model=\"formData.BX\"><br>\n        \n        <label for=\"cx\">Wpisz CX:</label>\n        <input type=\"text\" id=\"cx\" name=\"command\" v-model=\"formData.CX\"><br>\n      \n        <label for=\"dx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"Dx\" name=\"command\" v-model=\"formData.DX\"><br>\n      </div>\n      <div v-if=\"formData.Command === 'MOV_MEM' || formData.Command === 'XCHG_MEM'\">\n        <label for=\"ax\">Wpisz AX:</label>\n        <select v-model=\"formData.addressingMode\">\n          <option value=\"base\">adresowanie bazowe</option>\n          <option value=\"index\">adresowanie indeksowe</option>\n          <option value=\"indexed_base\">adresowanie indeksowo-bazowe</option>\n        </select>\n        <div v-if=\"formData.addressingMode === 'base'\">\n        <label for=\"bx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"bx\" name=\"command\" v-model=\"formData.BX\"><br>\n\n        <label for=\"bp\">Wpisz BP:</label>\n        <input type=\"text\" id=\"bp\" name=\"command\" v-model=\"formData.BP\"><br>\n        </div>\n        <div v-if=\"formData.addressingMode === 'index'\">\n        <label for=\"di\">Wpisz DI:</label>\n        <input type=\"text\" id=\"di\" name=\"command\" v-model=\"formData.DI\"><br>\n      \n        <label for=\"si\">Wpisz SI:</label>\n        <input type=\"text\" id=\"si\" name=\"command\" v-model=\"formData.SI\"><br>\n\n        <label for=\"si\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"si\" name=\"command\" v-model=\"formData.SI\"><br>\n        \n      </div>\n      <div v-if=\"formData.addressingMode === 'indexed_base'\">\n        <label for=\"ax\">Wpisz AX:</label>\n        <input type=\"text\" id=\"ax\" name=\"command\" v-model=\"formData.AX\"><br>\n\n        <label for=\"bx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"bx\" name=\"command\" v-model=\"formData.BX\"><br>\n        \n        <label for=\"cx\">Wpisz CX:</label>\n        <input type=\"text\" id=\"cx\" name=\"command\" v-model=\"formData.CX\"><br>\n      \n        <label for=\"dx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"Dx\" name=\"command\" v-model=\"formData.DX\"><br>\n      </div>\n      </div>\n\n      <div v-if=\"formData.Command === 'PUSH' || formData.Command === 'POP'\">\n        <label for=\"dx\">Wpisz DX:</label>\n        <input type=\"text\" id=\"dx\" name=\"command\" v-model=\"formData.DX\"><br>\n\n        <label for=\"offset\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"offset\" name=\"command\" v-model=\"formData.Offset\"><br>\n      </div>\n\n      <input type=\"submit\" value=\"Wyślij\" @click=\"sendCommand\">\n    </form>\n\n    <div v-if=\"response\">\n      <h3>Przetworzone dane:</h3>\n      <p>Wartość 1: {{ response.ProcessedValue1 }}</p>\n      <p>Wartość 2: {{ response.ProcessedValue2 }}</p>\n      <p>Wartość 3: {{ response.ProcessedValue3 }}</p>\n      <p>Wartość 4: {{ response.ProcessedValue4 }}</p>\n      <p>Metoda przetwarzania: {{ response.ProcessMethod }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      msg: \"Symulator rozkazów procesora\",\n      formData: {\n        AX: \"0x0000\",\n        BX: \"0x0000\",\n        CX: \"0x0000\",\n        DX: \"0x0000\",\n        Offset: \"0x0000\",\n        Command: \"MOV\",\n      },\n      response: null,\n      submitted: false,\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        AX: this.formData.AX,\n        BX: this.formData.BX,\n        CX: this.formData.CX,\n        DX: this.formData.DX,\n        Offset: this.formData.Offset,\n        Command: this.formData.Command,\n      };\n      const res = await axios.post(\"http://localhost:5041/api/cpu\", formData);\n      this.response = res.data;\n    },\n    sendCommand() {\n      console.log(this.formData);\n    },\n  },\n};\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AA4FA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,8BAA8B;MACnCC,QAAQ,EAAE;QACRC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMV,QAAO,GAAI;QACfC,EAAE,EAAE,IAAI,CAACD,QAAQ,CAACC,EAAE;QACpBC,EAAE,EAAE,IAAI,CAACF,QAAQ,CAACE,EAAE;QACpBC,EAAE,EAAE,IAAI,CAACH,QAAQ,CAACG,EAAE;QACpBC,EAAE,EAAE,IAAI,CAACJ,QAAQ,CAACI,EAAE;QACpBC,MAAM,EAAE,IAAI,CAACL,QAAQ,CAACK,MAAM;QAC5BC,OAAO,EAAE,IAAI,CAACN,QAAQ,CAACM;MACzB,CAAC;MACD,MAAMK,GAAE,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,+BAA+B,EAAEZ,QAAQ,CAAC;MACvE,IAAI,CAACO,QAAO,GAAII,GAAG,CAACb,IAAI;IAC1B,CAAC;IACDe,WAAWA,CAAA,EAAG;MACZC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,QAAQ,CAAC;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
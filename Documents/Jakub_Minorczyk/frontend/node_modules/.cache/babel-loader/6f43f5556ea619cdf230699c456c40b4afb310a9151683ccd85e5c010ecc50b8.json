{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      msg: \"Symulator rozkazów procesora\",\n      formData: {\n        AX: \"0x0000\",\n        BX: \"0x0000\",\n        CX: \"0x0000\",\n        DX: \"0x0000\",\n        BP: \"0x0000\",\n        DI: \"0x0000\",\n        SI: \"0x0000\",\n        Offset: \"0x0000\",\n        Command: \"MOV\",\n        addressingMode: \"base\"\n      },\n      response: null,\n      submitted: false\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        AX: parseInt(this.formData.AX, 16),\n        BX: parseInt(this.formData.BX, 16),\n        CX: parseInt(this.formData.CX, 16),\n        DX: parseInt(this.formData.DX, 16),\n        BP: parseInt(this.formData.BP, 16),\n        DI: parseInt(this.formData.DI, 16),\n        SI: parseInt(this.formData.SI, 16),\n        Offset: parseInt(this.formData.Offset, 16),\n        Command: this.formData.Command,\n        addressingMode: this.formData.addressingMode\n      };\n      try {\n        const res = await axios.post(\"http://localhost:5041/api/cpu\", formData);\n        console.log(res.data);\n        console.log(\"Response z API:\", this.response);\n        console.log(\"Response z API:\", res.data);\n        console.log(\"Processed values: \", res.data.processedValue1, res.data.processedValue2, res.data.processedValue3, res.data.processedValue4, res.data.processMethod);\n        this.response = res.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","msg","formData","AX","BX","CX","DX","BP","DI","SI","Offset","Command","addressingMode","response","submitted","methods","submitForm","parseInt","res","post","console","log","processedValue1","processedValue2","processedValue3","processedValue4","processMethod","error"],"sources":["/Users/jakubminorczyk/Documents/Jakub_Minorczyk/frontend/src/components/SimulatorForm.vue"],"sourcesContent":["<template>\n  <div class=\"SimulatorForm\">\n    <h1>{{ msg }}</h1>\n\n    <form @submit.prevent=\"submitForm\">\n      <label for=\"command\">Wybierz rozkaz:</label>\n      <select id=\"command\" v-model=\"formData.Command\">\n        <option value=\"MOV\">MOV</option>\n        <option value=\"XCHG\">XCHG</option>\n        <option value=\"MOV_MEM\">MOV_MEM</option>\n        <option value=\"XCHG_MEM\">XCHG_MEM</option>\n        <option value=\"PUSH\">PUSH</option>\n        <option value=\"POP\">POP</option>\n      </select><br>\n\n      <!-- Pola widoczne tylko po wybraniu konkretnego rozkazu -->\n      <div v-if=\"formData.Command === 'MOV' || formData.Command === 'XCHG'\">\n        <select>\n          \n        </select>\n        <label for=\"ax\">Wpisz AX:</label>\n        <input type=\"text\" id=\"ax\" name=\"command\" v-model=\"formData.AX\"><br>\n\n        <label for=\"bx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"bx\" name=\"command\" v-model=\"formData.BX\"><br>\n        \n        <label for=\"cx\">Wpisz CX:</label>\n        <input type=\"text\" id=\"cx\" name=\"command\" v-model=\"formData.CX\"><br>\n      \n        <label for=\"dx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"Dx\" name=\"command\" v-model=\"formData.DX\"><br>\n      </div>\n      <div v-if=\"formData.Command === 'MOV_MEM' || formData.Command === 'XCHG_MEM'\">\n        <label for=\"ax\">Wybierz adresowanie:</label>\n        <select v-model=\"formData.addressingMode\">\n          <option value=\"base\">adresowanie bazowe</option>\n          <option value=\"index\">adresowanie indeksowe</option>\n          <option value=\"indexed_base\">adresowanie indeksowo-bazowe</option>\n        </select>\n        <div v-if=\"formData.addressingMode === 'base'\">\n        <label for=\"bx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"bx\" name=\"command\" v-model=\"formData.BX\"><br>\n\n        <label for=\"bp\">Wpisz BP:</label>\n        <input type=\"text\" id=\"bp\" name=\"command\" v-model=\"formData.BP\"><br>\n\n        <label for=\"offset\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"offset\" name=\"command\" v-model=\"formData.Offset\"><br>\n        \n        </div>\n        <div v-if=\"formData.addressingMode === 'index'\">\n        <label for=\"di\">Wpisz DI:</label>\n        <input type=\"text\" id=\"di\" name=\"command\" v-model=\"formData.DI\"><br>\n      \n        <label for=\"si\">Wpisz SI:</label>\n        <input type=\"text\" id=\"si\" name=\"command\" v-model=\"formData.SI\"><br>\n\n        <label for=\"offset\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"offset\" name=\"command\" v-model=\"formData.Offset\"><br>\n        \n      </div>\n      <div v-if=\"formData.addressingMode === 'indexed_base'\">\n        <label for=\"bx\">Wpisz BX:</label>\n        <input type=\"text\" id=\"bx\" name=\"command\" v-model=\"formData.BX\"><br>\n\n        <label for=\"bp\">Wpisz BP:</label>\n        <input type=\"text\" id=\"bp\" name=\"command\" v-model=\"formData.BP\"><br>\n        \n        <label for=\"di\">Wpisz DI:</label>\n        <input type=\"text\" id=\"di\" name=\"command\" v-model=\"formData.DI\"><br>\n      \n        <label for=\"si\">Wpisz SI:</label>\n        <input type=\"text\" id=\"si\" name=\"command\" v-model=\"formData.SI\"><br>\n\n        <label for=\"offset\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"offset\" name=\"command\" v-model=\"formData.Offset\"><br>\n      </div>\n      </div>\n\n      <div v-if=\"formData.Command === 'PUSH' || formData.Command === 'POP'\">\n        <label for=\"dx\">Wpisz DX:</label>\n        <input type=\"text\" id=\"dx\" name=\"command\" v-model=\"formData.DX\"><br>\n\n        <label for=\"offset\">Wpisz Offset:</label>\n        <input type=\"text\" id=\"offset\" name=\"command\" v-model=\"formData.Offset\"><br>\n      </div>\n\n      <input type=\"submit\" value=\"Wyślij\" >\n    </form>\n\n    <div v-if=\"response\">\n      <h3>Przetworzone dane:</h3>\n      <p>Wartość AX: {{ response.processedValue1 }}</p>\n      <p>Wartość BX: {{ response.processedValue2 }}</p>\n      <p>Wartość CX: {{ response.processedValue3 }}</p>\n      <p>Wartość DX: {{ response.processedValue4 }}</p>\n      <p>Metoda przetwarzania: {{ response.processMethod }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      msg: \"Symulator rozkazów procesora\",\n      formData: {\n        AX: \"0x0000\",\n        BX: \"0x0000\",\n        CX: \"0x0000\",\n        DX: \"0x0000\",\n        BP: \"0x0000\",\n        DI: \"0x0000\",\n        SI: \"0x0000\",\n        Offset: \"0x0000\",\n        Command: \"MOV\",\n        addressingMode: \"base\",\n      },\n      response: null,\n      submitted: false,\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        AX: parseInt(this.formData.AX, 16),  \n        BX: parseInt(this.formData.BX, 16),\n        CX: parseInt(this.formData.CX, 16), \n        DX: parseInt(this.formData.DX, 16),\n        BP: parseInt(this.formData.BP, 16),\n        DI: parseInt(this.formData.DI, 16),\n        SI: parseInt(this.formData.SI, 16),\n        Offset: parseInt(this.formData.Offset, 16),\n        Command: this.formData.Command,\n        addressingMode : this.formData.addressingMode,\n      };\n      try{\n      const res = await axios.post(\"http://localhost:5041/api/cpu\", formData);\n      console.log(res.data) ;\n      console.log(\"Response z API:\", this.response);\n      console.log(\"Response z API:\", res.data);\nconsole.log(\"Processed values: \", res.data.processedValue1, res.data.processedValue2, res.data.processedValue3, res.data.processedValue4, res.data.processMethod);\n\n      this.response = res.data;\n      }\n      catch (error) {\n        console.error(error);\n      }\n    },\n    \n  },\n};\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAsGA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,8BAA8B;MACnCC,QAAQ,EAAE;QACRC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,EAAE,EAAE,QAAQ;QACZC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE,KAAK;QACdC,cAAc,EAAE;MAClB,CAAC;MACDC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMd,QAAO,GAAI;QACfC,EAAE,EAAEc,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACC,EAAE,EAAE,EAAE,CAAC;QAClCC,EAAE,EAAEa,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE,EAAE,CAAC;QAClCC,EAAE,EAAEY,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACG,EAAE,EAAE,EAAE,CAAC;QAClCC,EAAE,EAAEW,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACI,EAAE,EAAE,EAAE,CAAC;QAClCC,EAAE,EAAEU,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACK,EAAE,EAAE,EAAE,CAAC;QAClCC,EAAE,EAAES,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACM,EAAE,EAAE,EAAE,CAAC;QAClCC,EAAE,EAAEQ,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACO,EAAE,EAAE,EAAE,CAAC;QAClCC,MAAM,EAAEO,QAAQ,CAAC,IAAI,CAACf,QAAQ,CAACQ,MAAM,EAAE,EAAE,CAAC;QAC1CC,OAAO,EAAE,IAAI,CAACT,QAAQ,CAACS,OAAO;QAC9BC,cAAa,EAAI,IAAI,CAACV,QAAQ,CAACU;MACjC,CAAC;MACD,IAAG;QACH,MAAMM,GAAE,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,+BAA+B,EAAEjB,QAAQ,CAAC;QACvEkB,OAAO,CAACC,GAAG,CAACH,GAAG,CAAClB,IAAI;QACpBoB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACR,QAAQ,CAAC;QAC7CO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,GAAG,CAAClB,IAAI,CAAC;QAC9CoB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,GAAG,CAAClB,IAAI,CAACsB,eAAe,EAAEJ,GAAG,CAAClB,IAAI,CAACuB,eAAe,EAAEL,GAAG,CAAClB,IAAI,CAACwB,eAAe,EAAEN,GAAG,CAAClB,IAAI,CAACyB,eAAe,EAAEP,GAAG,CAAClB,IAAI,CAAC0B,aAAa,CAAC;QAE3J,IAAI,CAACb,QAAO,GAAIK,GAAG,CAAClB,IAAI;MACxB,EACA,OAAO2B,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EAEF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}